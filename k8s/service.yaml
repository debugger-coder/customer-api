apiVersion: v1
kind: Service
metadata:
  name: customer-api-service
  namespace: customer-api
  labels:
    app: customer-api
    tier: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  selector:
    app: customer-api
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: customer-api-config
  namespace: customer-api
data:
  application.properties: |
    # Database configuration
    spring.datasource.url=jdbc:h2:mem:testdb
    spring.datasource.username=sa
    spring.datasource.password=

    # Actuator configuration
    management.endpoints.web.exposure.include=health,info,metrics,prometheus
    management.endpoint.health.show-details=always

    # Logging configuration
    logging.level.root=INFO
    logging.level.com.example=DEBUG
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customer-api-ingress
  namespace: customer-api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: customer-api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: customer-api-service
            port:
              number: 80
